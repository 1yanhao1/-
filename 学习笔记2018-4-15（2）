菜鸟教程css，css3(复习）
CSS 指层叠样式表 (Cascading Style Sheets)，样式定义如何显示 HTML 元素，样式通常存储在样式表中，把样式添加到 HTML 4.0 中，是为了解决内容与表现分离的问题
外部样式表可以极大提高工作效率，外部样式表通常存储在 CSS 文件中，多个样式定义可层叠为一
选择器通常是您需要改变样式的 HTML 元素。每条声明由一个属性和一个值组成。属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开
/*这是个注释*/
CSS 中 id 选择器以 "#" 来定义，, 在 CSS 中，类选择器以一个点"."号显示
外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。
一般情况下，优先级如下：内联样式）Inline style > （内部样式）Internal style sheet >（外部样式）External style sheet > 浏览器默认样式
CSS 背景属性用于定义HTML元素的背景。
CSS 属性定义背景效果:background-color  background-image  background-repeat background-attachment background-position（简写属性顺序）
color	设置文本颜色 direction	设置文本方向 letter-spacing	设置字符间距 line-height	设置行高   text-align	对齐元素中的文本
text-decoration	向文本添加修饰  text-indent	缩进元素中文本的首行  text-shadow	设置文本阴影   text-transform	控制元素中的字母
unicode-bidi	设置或返回文本是否被重写   vertical-align	设置元素的垂直对齐   white-space	设置元素中空白的处理方式
word-spacing	设置字间距  p.uppercase {text-transform:uppercase;} p.lowercase {text-transform:lowercase;} p.capitalize {text-transform:capitalize;}
font-family 属性设置文本的字体系列。font-style主要是用于指定斜体文字的字体样式属性。font-size 属性设置文本的大小
1em和当前字体大小相等。在浏览器中默认的文字大小是16px。因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em,使用百分比和EM组合
链接的样式，可以用任何CSS属性（如颜色，字体，背景等）。特别的链接，可以有不同的样式，这取决于他们是什么状态。这四个链接状态是：
a:link - 正常，未访问过的链接 a:visited - 用户已访问过的链接 a:hover - 当用户鼠标放在链接上时 a:active - 链接被点击的那一刻
当设置为若干链路状态的样式，也有一些顺序规则：a:hover 必须跟在 a:link 和 a:visited后面   a:active 必须跟在 a:hover后面
CSS列表属性作用如下：设置不同的列表项标记为有序列表,设置不同的列表项标记为无序列表,设置列表项标记为图像可以按顺序设置如下属性：
list-style-type,list-style-position ,list-style-image
指定CSS表格边框，使用border属性,border-collapse 属性设置表格的边框是否被折叠成一个单一的边框或隔开
如果在表的内容中控制空格之间的边框，应使用td和th元素的填充属性：padding
盒子模型：Margin(外边距) - 清除边框外的区域，外边距是透明的。Border(边框) - 围绕在内边距和内容外的边框。Padding(内边距) - 清除内容周围的区域，
内边距是透明的。Content(内容) - 盒子的内容，显示文本和图像。
当您指定一个CSS元素的宽度和高度属性时，你只是设置内容区域的宽度和高度
border-style 值，可以通过 border-width 属性为边框指定宽度，border-color属性用于设置边框的颜色，在CSS中，可以指定不同的侧面不同的边框：border-style属性可以有1-4个值：
轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。轮廓（outline）属性指定元素轮廓的样式、颜色和宽度
margin 清除周围的（外边框）元素区域。margin 没有背景颜色，是完全透明的。margin 可以单独改变元素的上，下，左，右边距，也可以一次改变所有的属性。
当元素的 padding（填充）内边距被清除时，所释放的区域将会受到元素背景颜色的填充
为了尽量减少代码，你可以使用分组选择器。每个选择器用逗号分隔.嵌套选择器：它可能适用于选择器内部的选择器的样式
CSS 尺寸 (Dimension)属性height	设置元素的高度。 line-height	设置行高。 max-height	设置元素的最大高度。 max-width	设置元素的最大宽度。
min-height	设置元素的最小高度。 min-width	设置元素的最小宽度。 width	设置元素的宽度。
隐藏元素 - display:none或visibility:hidden隐藏一个元素可以通过把display属性设置为"none"，或把visibility属性设置为"hidden"。但是请注意，这两种方法会产生不同的结果。
visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局
li {display:inline;}   span {display:block;}
static 定位，HTML元素的默认值，即没有定位，元素出现在正常的流中。静态定位的元素不会受到 top, bottom, left, right影响。
fixed 定位元素的位置相对于浏览器窗口是固定位置。即使窗口是滚动的它也不会移动：
相对定位元素经常被用来作为绝对定位元素的容器块。
绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<html>
元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素，z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）一个元素可以有正数或负数的堆叠顺序：
overflow设置当元素的内容溢出其区域时发生的事情auto hidden scroll visible inherit
元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。
浮动元素之后的元素将围绕它。浮动元素之前的元素将不会受到影响。clear	指定不允许元素周围有浮动元素
cursor	显示光标移动到指定的类型
元素居中对齐
.center {
    margin: auto;
    width: 50%;
}
如果仅仅是为了文本在元素内居中对齐，可以使用 text-align: center;
.right {
    position: absolute;
    right: 0px;
    width: 300px;
    border: 3px solid #73AD21;
    padding: 10px;
}
当使用 position 来对齐元素时, 通常 <body> 元素会设置 margin 和 padding 。 这样可以避免在不同的浏览器中出现可见的差异。
我们也可以使用 float 属性来对齐元素:
垂直居中
.center {
    padding: 70px 0;
    border: 3px solid green;
    text-align: center;
}
CSS组合选择符包括各种简单选择符的组合方式。在 CSS3 中包含了四种组合方式:后代选取器(以空格分隔) 子元素选择器(以大于号分隔）相邻兄弟选择器（以加号分隔）
普通兄弟选择器（以破折号分隔）
anchor伪类 可以使用 :first-child 伪类来选择元素的第一个子元素  :lang(language)	p:lang(it)	为<p>元素的lang属性选择一个开始值
"first-line" 伪元素用于向文本的首行设置特殊样式  first-letter" 伪元素用于向文本的首字母设
置特殊样式 ":before" 伪元素可以在元素的内容前面插入新内容
导航条基本上是一个链接列表，所以使用 <ul> 和 <li>元素非常有意义，从列表中删除边距和填充，
<style>
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    width: 200px;
    background-color: #f1f1f1;
    border: 1px solid #555;
}

li a {
    display: block;
    color: #000;
    padding: 8px 16px;
    text-decoration: none;
}

li {
    text-align: center;
    border-bottom: 1px solid #555;
}
li {
    border-right: 1px solid #bbb;
}
 
li:last-child {
    border-right: none;
}
li:last-child {
    border-bottom: none;
}

li a.active {
    background-color: #4CAF50;
    color: white;
}

li a:hover:not(.active) {
    background-color: #555;
    color: white;
}
</style>
下拉菜单代码
<style>
/* 下拉按钮样式 */
.dropbtn {
    background-color: #4CAF50;
    color: white;
    padding: 16px;
    font-size: 16px;
    border: none;
    cursor: pointer;
}

/* 容器 <div> - 需要定位下拉内容 */
.dropdown {
    position: relative;
    display: inline-block;
}

/* 下拉内容 (默认隐藏) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
}

/* 下拉菜单的链接 */
.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

/* 鼠标移上去后修改下拉菜单链接颜色 */
.dropdown-content a:hover {background-color: #f1f1f1}

/* 在鼠标移上去后显示下拉菜单 */
.dropdown:hover .dropdown-content {
    display: block;
}

/* 当下拉内容显示后修改下拉按钮的背景颜色 */
.dropdown:hover .dropbtn {
    background-color: #3e8e41;
}
</style>

<div class="dropdown">
  <button class="dropbtn">下拉菜单</button>
  <div class="dropdown-content">
    <a href="#">菜鸟教程 1</a>
    <a href="#">菜鸟教程 2</a>
    <a href="#">菜鸟教程 3</a>
  </div>
CSS 提示工具(Tooltip)
可以使用 CSS3 transition 属性及 opacity 属性来实现提示工具的淡入效果:
.tooltip .tooltiptext {
    opacity: 0;
    transition: opacity 1s;
}
左侧提示框/右侧箭头：
.tooltip:hover .tooltiptext {
    opacity: 1;
}
.tooltip .tooltiptext::after {
    content: " ";
    position: absolute;
    top: 50%;
    left: 100%; /* 提示工具右侧 */
    margin-top: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent transparent black;
}
显示在头部
.tooltip .tooltiptext {
    width: 120px;
    bottom: 100%;
    left: 50%; 
    margin-left: -60px; /* 使用一半宽度 (120/2 = 60) 来居中提示工具 */
}
@media 规则允许在相同样式表为不同媒体设置不同的样式。
.responsive {
    padding: 0 6px;
    float: left;
    width: 24.99999%;
}

@media only screen and (max-width: 700px){
    .responsive {
        width: 49.99999%;
        margin: 6px 0;
    }
}

@media only screen and (max-width: 500px){
    .responsive {
        width: 100%;
    }
}
在 CSS3 中 border-radius 属性被用于创建圆角：
CSS3 中的 box-shadow 属性被用来添加阴影
#round
{
	-webkit-border-image:url(border.png) 30 30 round; /* Safari 5 and older */
	-o-border-image:url(border.png) 30 30 round; /* Opera */
	border-image:url(border.png) 30 30 round;
}

#stretch
{
	-webkit-border-image:url(border.png) 30 30 stretch; /* Safari 5 and older */
	-o-border-image:url(border.png) 30 30 stretch; /* Opera */
	border-image:url(border.png) 30 30 stretch;
}
background-Origin属性指定了背景图像的位置区域。content-box, padding-box,和 border-box区域内可以放置背景图像。
CSS3中background-clip背景剪裁属性是从指定位置开始绘制。背景填充至边界的外边界
通过使用 CSS3 渐变（gradients），你可以减少下载的事件和宽带的使用。此外，渐变效果的元素在放大时看起来效果更好，因为渐变（gradient）是由浏览器生成的。
background: linear-gradient(direction, color-stop1, color-stop2, ...);
CSS3 渐变也支持透明度（transparent），可用于创建减弱变淡的效果。为了添加透明度，我们使用 rgba() 函数来定义颜色结点。rgba() 函数中的最后一个参数可以是从 0 到 1 的值，它定义了颜色的透明度：0 表示完全透明，1 表示完全不透明。
background: radial-gradient(center, shape size, start-color, ..., last-color);
文本阴影指定了水平阴影，垂直阴影，模糊的距离，以及阴影的颜色
h1
{
    text-shadow: 5px 5px 5px #FF0000;
}
文本效果 text-wrap	规定文本的换行规则。	word-break	规定非中日韩文本的换行规则 word-wrap	允许对长的不可分割的单词进行分割并换行到下一行。
CSS3 @font-face 规则    font-family	name	必需。规定字体的名称。 src	URL	必需。定义字体文件的 URL。
